import React from "react";
import {
  Document,
  Packer,
  Paragraph,
  Table,
  TableRow,
  TableCell,
  WidthType,
  TextRun,
  AlignmentType,
} from "docx";
import { saveAs } from "file-saver";

export default function ExportWordDoc() {
  const generateDoc = () => {
    const doc = new Document({
      sections: [
        {
          children: [
            // --- Header ---
            new Paragraph({
              children: [
                new TextRun({
                  text: "King Mongkut’s University of Technology Thonburi",
                  bold: true,
                }),
              ],
              alignment: AlignmentType.CENTER,
              spacing: { after: 100 },
            }),
            new Paragraph({
              text: "Department of Electronics and Telecommunication Engineering",
              alignment: AlignmentType.CENTER,
              spacing: { after: 100 },
            }),
            new Paragraph({
              text: "Course Portfolio",
              alignment: AlignmentType.CENTER,
              spacing: { after: 300 },
            }),
            new Paragraph({
              text: "ENEXXX \t--------------------------------\t1/2024",
              alignment: AlignmentType.CENTER,
              spacing: { after: 100 },
            }),
            new Paragraph({
              text: "Instructor: \t\t--------------------------------",
              alignment: AlignmentType.CENTER,
              spacing: { after: 400 },
            }),

            // --- Combined CLO + SO Table (70/30) ---
            new Table({
              width: { size: 100, type: WidthType.PERCENTAGE },
              rows: [
                // 1) Header row: CLOs & SOs
                new TableRow({
                  children: [
                    new TableCell({
                      width: { size: 70, type: WidthType.PERCENTAGE },
                      children: [
                        new Paragraph({
                          children: [
                            new TextRun({
                              text: "Course Learning Outcomes (CLOs)",
                              bold: true,
                            }),
                          ],
                        }),
                      ],
                    }),
                    new TableCell({
                      width: { size: 30, type: WidthType.PERCENTAGE },
                      children: [
                        new Paragraph({
                          children: [
                            new TextRun({
                              text: "Student Outcomes\n(SOs)",
                              italics: true,
                            }),
                          ],
                          alignment: AlignmentType.CENTER,
                        }),
                      ],
                    }),
                  ],
                }),
                // 2) Sub-header row: description
                new TableRow({
                  children: [
                    new TableCell({
                      children: [
                        new Paragraph({
                          children: [
                            new TextRun({
                              text: "At the end of the course, students should be able to:",
                              italics: true,
                            }),
                          ],
                        }),
                      ],
                    }),
                    new TableCell({ children: [new Paragraph("")] }),
                  ],
                }),
                // 3) PI → X rows
                ...[1, 2, 3].map(() =>
                  new TableRow({
                    children: [
                      new TableCell({ children: [new Paragraph("PI XX")] }),
                      new TableCell({ children: [new Paragraph("X")] }),
                    ],
                  })
                ),
              ],
            }),
            // caption
            new Paragraph({
              text: "(PI = Performance indicator)",
              spacing: { before: 100, after: 300 },
            }),

            // --- 1. Methods to Assess the CLOs (bold) ---
            new Paragraph({
              children: [
                new TextRun({
                  text: "1. Methods to Assess the CLOs",
                  bold: true,
                }),
              ],
              spacing: { before: 200, after: 100 },
            }),
            new Table({
              width: { size: 100, type: WidthType.PERCENTAGE },
              rows: [
                new TableRow({
                  children: [
                    new TableCell({
                      width: { size: 15, type: WidthType.PERCENTAGE },
                      children: [new Paragraph("CLO")],
                    }),
                    new TableCell({
                      width: { size: 35, type: WidthType.PERCENTAGE },
                      children: [new Paragraph("Method of assessment")],
                    }),
                    new TableCell({
                      width: { size: 15, type: WidthType.PERCENTAGE },
                      children: [new Paragraph("Assessment tool")],
                    }),
                    new TableCell({
                      width: { size: 35, type: WidthType.PERCENTAGE },
                      children: [new Paragraph("Criteria for the indicators")],
                    }),
                  ],
                }),
                ...[1, 2, 3].flatMap(() => [
                  new TableRow({
                    children: [
                      new TableCell({ children: [new Paragraph("PI X")] }),
                      new TableCell({
                        children: [
                          new Paragraph(
                            "Direct: Embedded test question pertaining to the PI"
                          ),
                        ],
                      }),
                      new TableCell({ children: [new Paragraph("")] }),
                      new TableCell({
                        children: [
                          new Paragraph(
                            "My own 5-scaled rubric that matches the Department’s scale (e.g., 5=excellent, …, 1=very poor)"
                          ),
                        ],
                      }),
                    ],
                  }),
                  new TableRow({
                    children: [
                      new TableCell({ children: [new Paragraph("")] }),
                      new TableCell({ children: [new Paragraph("Indirect:")] }),
                      new TableCell({ children: [new Paragraph("N/A")] }),
                      new TableCell({ children: [new Paragraph("N/A")] }),
                    ],
                  }),
                ]),
              ],
            }),

            // --- 2. Result of CLOs Assessment (bold) ---
            new Paragraph({
              children: [
                new TextRun({
                  text: "2. Result of CLOs Assessment",
                  bold: true,
                }),
              ],
              spacing: { before: 300, after: 100 },
            }),
            new Paragraph({
              children: [
                new TextRun({ text: "Direct Assessment", bold: true }),
              ],
              spacing: { after: 100 },
            }),
            new Paragraph({
              text: "The target is to have at least 60% of the students achieve each performance indicator in Level 4 or 5. The column “Result” indicates whether the accumulated percentage meets the target.",
              spacing: { after: 100 },
            }),
            new Paragraph({
              text: "Sample size = number of students enrolled in the course = XX",
              spacing: { after: 200 },
            }),
            new Table({
              width: { size: 100, type: WidthType.PERCENTAGE },
              rows: [
                new TableRow({
                  children: [
                    new TableCell({ rowSpan: 2, children: [new Paragraph("CLO")] }),
                    new TableCell({ rowSpan: 2, children: [new Paragraph("Average skill level")] }),
                    new TableCell({ columnSpan: 5, children: [new Paragraph("Distribution of skill level")] }),
                    new TableCell({ rowSpan: 2, children: [new Paragraph("Cumulation\nat levels ≥ 4")] }),
                    new TableCell({ rowSpan: 2, children: [new Paragraph("Meet target?")] }),
                  ],
                }),
                new TableRow({
                  children: [
                    new TableCell({ children: [new Paragraph("5")] }),
                    new TableCell({ children: [new Paragraph("4")] }),
                    new TableCell({ children: [new Paragraph("3")] }),
                    new TableCell({ children: [new Paragraph("2")] }),
                    new TableCell({ children: [new Paragraph("1")] }),
                  ],
                }),
                ...[1, 2, 3].map(() =>
                  new TableRow({
                    children: Array(9)
                      .fill(null)
                      .map(() => new TableCell({ children: [new Paragraph("")] })),
                  })
                ),
              ],
            }),
            new Paragraph({
              text: "The work of the top, median, and bottom students in terms of their skill levels are shown in Appendices A, B, and C, respectively. The top student had PIs XX of 5, 5, and 5, respectively. The median student had PIs XX of 3, 4-, and -3 respectively. The bottom student had PI XX of 1, 2, and 1, respectively.",
              spacing: { after: 200 },
            }),
            new Paragraph({
              children: [
                new TextRun({ text: "Indirect Assessment", bold: true }),
              ],
            }),
            new Paragraph({ text: "N/A", spacing: { after: 300 } }),

            // --- 3. Self-Evaluation (bold) ---
            new Paragraph({
              children: [
                new TextRun({
                  text: "3. Self-Evaluation on the Validity and Reliability of the Direct Assessment",
                  bold: true,
                }),
              ],
              spacing: { before: 300, after: 100 },
            }),
            new Paragraph({
              text: "Using the Department-issued 5-scaled rubric on validity and reliability, the instructor evaluated the validity and reliability of the CLO assessment as follows:",
              spacing: { after: 200 },
            }),
            new Table({
              width: { size: 100, type: WidthType.PERCENTAGE },
              rows: [
                new TableRow({
                  children: [
                    new TableCell({
                      width: { size: 15, type: WidthType.PERCENTAGE },
                      children: [new Paragraph("SO")],
                    }),
                    new TableCell({
                      width: { size: 60, type: WidthType.PERCENTAGE },
                      children: [new Paragraph("Parameter of the assessment tool")],
                    }),
                    new TableCell({
                      width: { size: 25, type: WidthType.PERCENTAGE },
                      children: [new Paragraph("Level (Meaning)")],
                    }),
                  ],
                }),
                new TableRow({
                  children: [
                    new TableCell({ children: [new Paragraph("X")] }),
                    new TableCell({ children: [new Paragraph("Validity")] }),
                    new TableCell({ children: [new Paragraph("")] }),
                  ],
                }),
                new TableRow({
                  children: [
                    new TableCell({ children: [new Paragraph("")] }),
                    new TableCell({ children: [new Paragraph("Reliability")] }),
                    new TableCell({ children: [new Paragraph("")] }),
                  ],
                }),
              ],
            }),
            new Paragraph({ text: "Justification of the specified levels", spacing: { after: 300 } }),

            // --- 4. Continuous Quality Improvement (bold) ---
            new Paragraph({
              children: [
                new TextRun({ text: "4. Continuous Quality Improvement", bold: true }),
              ],
              spacing: { before: 200, after: 100 },
            }),
            new Paragraph({
              children: [
                new TextRun({ text: "Faculty Evaluation of Attainment of CLOs", bold: true }),
              ],
              spacing: { after: 100 },
            }),
            new Paragraph({
              children: [
                new TextRun({ text: "Student Evaluation of the Course Strengths and Weaknesses", bold: true }),
              ],
              spacing: { after: 100 },
            }),
            new Paragraph({
              children: [
                new TextRun({ text: "Remedy Plan", bold: true }),
              ],
              spacing: { after: 100 },
            }),
            new Paragraph({
              text: "The course instructor proposed the following actions as possible remedies.",
              spacing: { after: 300 },
            }),

            // --- Appendices ---
            new Paragraph({ text: "Appendix A\nEmbedded Questions Done by a Top Student" }),
            new Paragraph({ text: "Appendix B\nEmbedded Questions Done by a Median Student" }),
            new Paragraph({ text: "Appendix C\nEmbedded Questions Done by a Bottom Student" }),
          ],
        },
      ],
    });

    Packer.toBlob(doc).then((blob) => saveAs(blob, "ENEXXX_Course_Portfolio_Final.docx"));
  };

  return (
    <div style={{ padding: 20 }}>
      <h2>Export Official Course Portfolio</h2>
      <button onClick={generateDoc}>Download DOCX</button>
    </div>
  );
}
